package miu.edu.attendance.domain;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;
import miu.edu.attendance.dto.RegisterUserDto;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

@NoArgsConstructor @Getter @ToString
@Entity
public class Person {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    int id;
    String username;
    String password;
    String firstName;
    String lastName;
    String barcodeId;

    @OneToMany (fetch = FetchType.EAGER)
    @JoinColumn(name = "person_id")
    Set<PersonRole> roles = new HashSet<>();

    public Person(RegisterUserDto dto) {
        username = dto.getUsername();
        password = dto.getPassword();
        firstName = dto.getFirstName();
        lastName = dto.getLastName();
        barcodeId = "AUTOGENERATED";
    }

    public void addRole(PersonRole role) {
        roles.add(role);
    }

    public Student asStudent() {
        for (PersonRole role : roles) {
            if(role.getName().equalsIgnoreCase("STUDENT")) {
                return (Student) role;
            }
        }
        return null;
    }

    public Faculty asFaculty() {
        for (PersonRole role : roles) {
            if(role.getName().equalsIgnoreCase("FACULTY")) {
                return (Faculty) role;
            }
        }
        return null;
    }

    public Personnel asPersonnel() {
        for (PersonRole role : roles) {
            if(role.getName().equalsIgnoreCase("PERSONNEL")) {
                return (Personnel) role;
            }
        }
        return null;
    }
}
